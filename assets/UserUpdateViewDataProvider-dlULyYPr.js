import{u as w,_ as N}from"./userDetail.query-C80tALs7.js";import{u as x}from"./typedRouteParams.composable-B3rXp667.js";import{z as c,d as f,g as b,o as d,p,w as t,e as a,J as D,f as I,t as S,u as o,y as T,B as $,b as v,H as F}from"./index-BIVmY7Rl.js";import{U as k,_ as E,a as q}from"./user.service-ClFg-jXg.js";import{u as Q,a as R}from"./mutation.composable-BPpGK4ej.js";import{u as V}from"./typedRouter.composable-D4ElUEns.js";import{Q as U}from"./queryKey.type-Dcw-U6pa.js";import{_ as B,a as M}from"./UserFormName.vue_vue_type_script_setup_true_lang-hQSmBdat.js";import"./query.composable-Ca-YCyjP.js";import"./useQueryClient-BKAmQ7_y.js";import"./style.util-BMJA6KU2.js";(function(){try{var r=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new Error().stack;e&&(r._sentryDebugIds=r._sentryDebugIds||{},r._sentryDebugIds[e]="c6dbd69f-4d05-48c7-a7e3-cff735a3218f",r._sentryDebugIdIdentifier="sentry-dbid-c6dbd69f-4d05-48c7-a7e3-cff735a3218f")}catch{}})();const P=c.object({firstName:c.string().min(1),lastName:c.string().min(1)});function A(){return Q({queryFn:async({body:r,params:e})=>await k.update(e.userUuid,r),queryKeysToInvalidate:[{exact:!1,key:U.USERS},{exact:!0,key:U.USER_DETAIL,params:{userUuid:r=>r.uuid}}]})}const C=f({__name:"UserUpdateForm",props:{form:{}},setup(r){const e=r,{t:s}=b(),u=e.form.register("firstName"),n=e.form.register("lastName");return(i,l)=>(d(),p(T,{form:e.form},{default:t(({formId:m})=>[a(B,{target:"header-actions"},{default:t(()=>[a(D,{"form-id":m,form:e.form},{default:t(()=>[I(S(o(s)("form.save_changes")),1)]),_:2},1032,["form-id","form"])]),_:2},1024),a(M,{"first-name":o(u),"last-name":o(n)},null,8,["first-name","last-name"])]),_:1},8,["form"]))}}),K=f({__name:"UserUpdateView",props:{user:{}},setup(r){const e=r,{t:s}=b(),u=V(),n=F(),i=R(),l=A(),m=[{label:s("shared.users"),to:{name:"user-overview"},type:"route"},{label:e.user.fullName,to:{name:"user-detail",params:{userUuid:e.user.uuid}},type:"route"},{label:s("shared.edit"),type:"page"}],{form:g,onSubmitForm:h}=$({initialState:v(()=>q.toUpdateForm(e.user)),schema:P});return h(async _=>{try{await l.execute({body:_,params:{userUuid:e.user.uuid}}),n.success({title:s("users.update.success")}),await u.push({name:"user-detail",params:{userUuid:e.user.uuid}})}catch(y){i.show(y)}}),(_,y)=>(d(),p(E,{breadcrumbs:m,title:e.user.fullName},{default:t(()=>[a(C,{form:o(g)},null,8,["form"])]),_:1},8,["title"]))}}),ee=f({__name:"UserUpdateViewDataProvider",setup(r){const e=x(),s=w(e.userUuid);return(u,n)=>(d(),p(N,{queries:{user:o(s)}},{default:t(({data:i})=>[a(K,{user:i.user},null,8,["user"])]),_:1},8,["queries"]))}});export{ee as default};
